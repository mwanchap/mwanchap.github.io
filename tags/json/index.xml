<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSON on Matt Wanchap</title>
    <link>https://wanchap.com/tags/json/</link>
    <description>Recent content in JSON on Matt Wanchap</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 27 May 2014 18:50:00 +0000</lastBuildDate>
    
	<atom:link href="https://wanchap.com/tags/json/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The JSON deserialisation drinking game</title>
      <link>https://wanchap.com/posts/the-json-deserialisation-drinking-game/</link>
      <pubDate>Tue, 27 May 2014 18:50:00 +0000</pubDate>
      
      <guid>https://wanchap.com/posts/the-json-deserialisation-drinking-game/</guid>
      <description>Take a drink every time you see this pattern:
$.ajax({
data: &amp;ldquo;{things:stuff}&amp;quot;,
dataType: &amp;ldquo;json&amp;rdquo;,
 //other properties omitted
success: function (result) {
var myObject = eval( &amp;ldquo;(&amp;rdquo; + result.d + &amp;ldquo;)&amp;quot; ); //noooooooooooooooo
}
});
Take a drink when someone seriously brings up the catchphrase &amp;ldquo;eval is evil&amp;rdquo; or a variant of it.
Finish all of the drinks if you sincerely think that nobody would ever get malicious code into your database/application that will be happily executed when eval evaluates it and send your client to their phishing duplicate of your login page where they harvest user credentials before redirecting them right back to your application so nobody ever realises what just happened.</description>
    </item>
    
  </channel>
</rss>